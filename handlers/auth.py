from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ContextTypes, CommandHandler, MessageHandler, filters
import logging
import config

def get_main_menu():
    return ReplyKeyboardMarkup([
        ['üìã –ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã', 'üéÅ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã'],
        ['‚ÑπÔ∏è –û –Ω–∞—Å', '‚ùå –û—Ç–º–µ–Ω–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è']
    ], resize_keyboard=True)

async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    api = context.bot_data['api']
    user = update.effective_user
    try:
        api.ensure_auth(user.id, user.first_name or '', user.last_name or '')
        await update.message.reply_text(
            f"–ü—Ä–∏–≤–µ—Ç, {user.first_name or '–≥–æ—Å—Ç—å'}!\n\n"
            "–Ø –ø–æ–º–æ–≥—É –≤–∞–º –≤—ã–±—Ä–∞—Ç—å –∏ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å, –∞ —Ç–∞–∫–∂–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç.\n"
            "–ü–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∏–∂–µ!",
            reply_markup=get_main_menu()
        )
    except Exception as e:
        await update.message.reply_text(
            "–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏/—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
        )

async def logout_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–í —ç—Ç–æ–º –±–æ—Ç–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è. –ü—Ä–æ—Å—Ç–æ –ø–æ–ª—å–∑—É–π—Ç–µ—Å—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º!",
        reply_markup=get_main_menu()
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é

async def menu_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text
    logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª: {text}")  # –î–ª—è –æ—Ç–ª–∞–¥–∫–∏
    if text == 'üìã –ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã':
        from handlers.masterclasses import list_masterclasses
        return await list_masterclasses(update, context)
    elif text == 'üéÅ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã':
        from handlers.certificates import list_certificates
        return await list_certificates(update, context)
    elif text == '‚ÑπÔ∏è –û –Ω–∞—Å':
        from handlers.profile import about_command
        return await about_command(update, context)
    elif text == '‚ùå –û—Ç–º–µ–Ω–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è':
        await update.message.reply_text(
            '–î–ª—è –æ—Ç–º–µ–Ω—ã –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞—à–µ–º—É –º–µ–Ω–µ–¥–∂–µ—Ä—É: @les_jour_mk',
            reply_markup=get_main_menu()
        )
    else:
        await update.message.reply_text(
            f'–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –Ω–∏–∂–µ. (–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏: {text})',
            reply_markup=get_main_menu()
        )

start_handler = CommandHandler('start', start_command)
logout_handler = CommandHandler('logout', logout_handler)
menu_handler = MessageHandler(filters.TEXT & (~filters.COMMAND), menu_handler)
